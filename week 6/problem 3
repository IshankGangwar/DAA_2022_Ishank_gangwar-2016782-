#include<iostream>
#include<vector>
#include<stack>
using namespace std;
bool dfs(int node,vector<int>&vis,vector<int>&dfvis,vector<vector<int>>&v)
{    vis[node]=1;
     dfvis[node]=1;
     for(int i=0;i<v[node].size();i++)
     {
         if(vis[i]!=1 && v[node][i]!=0)
         {
           if(dfs(i,vis,dfvis,v))
           return true;
         }
         else if(v[node][i]!=0&&vis[i]==1&&dfvis[i]==1)
         return true;
     }
     dfvis[node]=0;
     return false;
}
int main(){
int n;
cout<<"enter the no. of nodes"<<endl;
cin>>n;
vector<vector<int>>v(n,vector<int>(n,0));
 for(int i=0;i<n;i++)
 {
     for(int j=0;j<n;j++)
     cin>>v[i][j];
 }
 vector<int>vis(n);
 vector<int>dfsvis(n);
 int f=0;
 for(int i=0;i<n;i++)
 {
     if(!vis[i])
    if(dfs(i,vis,dfsvis,v)) {
        f=1;
      cout<<"yes a cycle present";
      break;
    }}
 if(f==0)
 cout<<"no cycle present";
return 0;
}
